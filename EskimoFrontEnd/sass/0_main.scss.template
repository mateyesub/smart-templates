/* ==========================================================================
   Project Name: <%= Name %>
   Author: <%= Author %>
   ========================================================================== */
/*/

/**
*For linting options see .jshintrc in the project root folder 
*stylesheet written accring to the ITCSS NemeSpace-BEM (Block Element Modifier) principles
*in camelCase:
*namespace prefixes: --: global variabels; o-: Object; c-: Component; u-: Utility; t-: Theme; s-: Scope;
*is-, has-:  Stete or Condition; _: Hack; js-: JavaScript Bind; qa-: QA or Test Bind
*Visit:
*http://www.jamesturneronline.net/blog/bemit-naming-convention.html
*https://css-tricks.com/bem-101/
*https://csswizardry.com/2015/03/more-transparent-ui-code-with-namespaces/
*https://css-tricks.com/abem-useful-adaptation-bem/
*/
/*/
/*The author of this code follows CSS Guidelines to write readable, efficient and
scalable code.
visit: https://cssguidelin.es/
*/
/*The architectural baseline is inspired by inuitcss ans ITCSS by Harry Roberts for
extensible, scalable, sass-based, OOCSS
visit: https://github.com/inuitcss/inuitcss
visit: https://www.creativebloq.com/web-design/manage-large-css-projects-itcss-101517528
*/
/*/
/* Plance @import and @charset @font-face rules here 
Any @import rule must be precede first, all other rules and style rules in a 
style sheet besides @charset, which must be the first thing in the 
style sheet if it exists, otherwise the @import rule is invalid. 
Visit: http://www.w3.org/TR/css3-cascade/#at-import */

/**
 * CONTENTS
 *
 * SETTINGS
 * Config...............Project-level configuration and feature switches.
 * Variabels............Project-wide abstract variables.
 *
 * TOOLS
 * Font-size............A mixin which guarantees baseline-friendly line-heights.
 * Clearfix.............Micro clearfix mixin.
 * Hidden...............Mixin for hiding elements.
 * Sass MQ..............inuitcss’ default media query manager.
 *
 * GENERIC
 * Variabels............Non-abstract generic variables.
 * Box-sizing...........Better default `box-sizing`.
 * Normalize.css........A level playing field using @necolas’ Normalize.css.
 * Reset................A tiny reset to complement Normalize.css.
 * Shared...............Sensibly and tersely share some global commonalities
 *                      (particularly useful when managing vertical rhythm).
 *
 * ELEMENTS
 * Page.................Set up our document’s default `font-size` and
 *                      `line-height`.
 * Headings.............Very minimal (i.e. only font-size information) for
 *                      headings 1 through 6.
 * Images...............Base image styles.
 * Tables...............Simple table styles.
 *
 * OBJECTS
 * Wrapper..............Page constraint object.
 * Layout...............Generic layout module.
 * Media................Image- and text-like content side by side. The
 *                      poster-child of OOCSS.
 * Flag.................Table-layout-based advancement on the Media object.
 * List-bare............Lists with no bullets or indents.
 * List-inline..........A list whose items all site in a line.
 * Box..................Simple boxing abstraction.
 * Block................Image-on-top-of-text object.
 * Ratio................A container for maintaining aspect ratio of content.
 * Crop.................Provide a cropping context for media (images, etc.).
 * Table................Classes for manipulating `table`s.
 * Pack.................Pack items into available horizontal space.
 *
 * COMPONENTS
 * Buttons..............An example button component, and how it fits into the
 *                      inuitcss framework.
 *
 * UTILITIES
 * Clearfix.............Bind our clearfix onto a utility class.
 * Widths...............Simple width helper classes.
 * Headings.............Reassigning our heading styles to helper classes.
 * Spacings.............Nudge bits of the DOM around with these spacing
 *                      classes.
 * Responsive-Spacings..Enhances the function of normal spacings for
 *                      responsive usage.
 * Print................Reset-like styles taken from the HTML5 Boilerplate.
 * Hide.................Helper classes to hide content
 */
@import "1_settings/settings.layer";
@import "2_tools/tools.layer";
@import "3_generic/generic.layer";
@import "4_elements/elements.layer";
@import "5_objects/objects.layer";
@import "6_components/components.layer";
@import "7_utilities/utilities.layer";
